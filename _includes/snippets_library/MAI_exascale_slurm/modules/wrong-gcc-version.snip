Let's take a closer look at the `parabricks` module. Nvidial Parabricks is an extremely widely used.
NVIDIA® Parabricks® is the only GPU-accelerated suite of genomic analysis applications
 that delivers fast and accurate analysis of genomes.
It might not  run if the wrong version is loaded on specific GPU architecture. In this case, there
are two different versions: `parabricks/3.8.0-1.ampere` and `parabricks/3.7.0-1.ampere-extra-tools`. How do we load each
copy and which copy is the default?

In this case, `parabricks/3.8.0-1.ampere` has a `(D)` next to it. This indicates that it is the
default &mdash; if we type `module load parabricks`, this is the copy that will be
loaded.

```
{{ site.remote.prompt }} module load parabricks 
{{ site.remote.prompt }} pbrun --version
```
{: .language-bash}

```
Please visit https://docs.nvidia.com/clara/#parabricks for detailed documentation

pbrun: 3.8.0-1.ampere

```
{: .output}

Note that three things happened: the default copy of `parabricks` was loaded (version
3.8.0-1.ampere)
system turned what might be a super-complex operation into a single command.

So how do we load the non-default copy of a software package? In this case, the
only change we need to make is be more specific about the module we are
loading. There are three `parabricks` modules: `parabricks/3.8.0-1.ampere` and `parabricks/3.7.0-1.ampere-EXPIRE`and `parabricks/3.7.0-1.ampere-extra-tools`. To load a
non-default module, the only change we need to make to our `module load`
command is to leave in the version number after the `/`.

```
{{ site.remote.prompt }} module load parabricks/3.7.0-1.ampere-extra-tools 
{{ site.remote.prompt }} pbrun --version
```
{: .language-bash}

```

The following have been reloaded with a version change:
  1) parabricks/3.8.0-1.ampere => parabricks/3.7.0-1.ampere-extra-tools

```
{: .output}

We now have successfully switched from `parabricks/3.8.0-1.ampere` to `parabricks/3.7.0-1.ampere-extra-tools`. 

```
Please visit https://docs.nvidia.com/clara/#parabricks for detailed documentation

pbrun: 3.7.0-1.ampere


```
{: .output}
